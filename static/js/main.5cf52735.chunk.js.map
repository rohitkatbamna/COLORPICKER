{"version":3,"sources":["Button.js","App.js","reportWebVitals.js","index.js"],"names":["Button","className","this","props","light","onClick","React","Component","Random","state","color","handleClick","bind","applyColor","prevProps","prevState","ary","join","reduce","a","b","formatColor","document","body","style","background","setState","chooseColor","random","i","push","Math","floor","isLight","ReactDOM","render","getElementById","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"8OAEaA,EAAb,4JACC,WACC,OACC,wBACCC,UAAYC,KAAKC,MAAMC,MAAQ,eAAiB,cAC5CC,QAAYH,KAAKC,MAAME,QAF5B,yBAHH,GAA4BC,IAAMC,WCI5BC,G,wDACJ,WAAYL,GAAO,IAAD,8BAChB,cAAMA,IACDM,MAAQ,CAAEC,MAAO,CAAC,GAAI,IAAK,KAChC,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAHH,E,qDAKlB,WACEV,KAAKW,e,gCAGP,SAAmBC,EAAWC,GAC5Bb,KAAKW,e,yBAGP,SAAYG,GACV,MAAO,OAASA,EAAIC,KAAK,MAAQ,M,qBAGnC,WAEE,OADYf,KAAKO,MAAMC,MACZQ,QAAO,SAACC,EAAEC,GAAH,OAASD,EAAEC,KAAK,M,wBAGpC,WACE,IAAMV,EAAQR,KAAKmB,YAAYnB,KAAKO,MAAMC,OAC1CY,SAASC,KAAKC,MAAMC,WAAaf,I,yBAEnC,WACAR,KAAKwB,SAAS,CACZhB,MAAOR,KAAKyB,kB,yBAId,WAEE,IADA,IAAMC,EAAS,GACNC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAAOE,KAAKC,KAAKC,MAAoB,IAAdD,KAAKH,WAE9B,OAAOA,I,oBAGT,WACE,OACE,gCACE,qBAAI3B,UAAWC,KAAK+B,UAAY,QAAU,QAA1C,2BACe/B,KAAKmB,YAAYnB,KAAKO,MAAMC,OAD3C,OAGA,cAAC,EAAD,CAAQN,MAAOF,KAAK+B,UACpB5B,QAASH,KAAKS,qB,GAhDDL,IAAMC,YAsD3B2B,IAASC,OACP,cAAC,EAAD,IACAb,SAASc,eAAe,SAGX5B,QCrDA6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdJ,IAASC,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASc,eAAe,SAM1BC,M","file":"static/js/main.5cf52735.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport class Button extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<button \r\n\t\t\t\tclassName={ this.props.light ? 'light-button' : 'dark-button' }\r\n        onClick = { this.props.onClick }>\r\n\t\t\t\tRefresh\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Button } from './Button.js'\nimport './App.css';\n\n\nclass Random extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = { color: [10, 223, 73] };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  componentDidMount() {\n    this.applyColor();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.applyColor();\n  }\n\n  formatColor(ary) {\n    return 'rgb(' + ary.join(', ') + ')';\n  }\n\n  isLight() {\n    const rgb = this.state.color;\n    return rgb.reduce((a,b) => a+b) < 127 * 3;\n  }\n\n  applyColor() {\n    const color = this.formatColor(this.state.color);\n    document.body.style.background = color;\n  }\n  handleClick() {\n  this.setState({\n    color: this.chooseColor()\n  });\n}\n\n  chooseColor() {\n    const random = [];\n    for (let i = 0; i < 3; i++) {\n      random.push(Math.floor(Math.random()*256));\n    }\n    return random;\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 className={this.isLight() ? 'white' : 'black'}>\n        Your color is {this.formatColor(this.state.color)}.\n        </h1>\n        <Button light={this.isLight()} \n        onClick={this.handleClick}/>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Random />, \n  document.getElementById('root')\n);\n\nexport default Random;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}